
var scene,camera,renderer;var WIDTH=window.innerWidth;var HEIGHT=window.innerHeight;var SPEED=0.01;var zPoints=[]
function init(){scene=new THREE.Scene();var light=new THREE.DirectionalLight(0xffffff);light.position.set(0,1,1).normalize();scene.add(light);initMountain();initCloud();initCamera();initRenderer();document.body.appendChild(renderer.domElement);}
function initCamera(){camera=new THREE.PerspectiveCamera(70,WIDTH/HEIGHT,1,100);camera.position.set(-5,4,14);camera.lookAt(scene.position);}
function initRenderer(){renderer=new THREE.WebGLRenderer({antialias:true});renderer.setSize(WIDTH,HEIGHT);}
var mountain=null;function initMountain(){var loader=new THREE.JSONLoader();loader.load('/dist/js/meshes/mountain.json',function(geometry,materials){mountain=new THREE.Mesh(geometry,new THREE.MeshLambertMaterial(materials,wireframe=true));mountain.scale.x=mountain.scale.y=mountain.scale.z=0.79;mountain.position.y=0.5
mountain.translation=THREE.GeometryUtils.center(geometry);scene.add(mountain);console.log(mountain)
calcZCoords();});}
var cloud=null;function initCloud(){var loader=new THREE.JSONLoader();loader.load('/dist/js/meshes/cloud.json',function(geometry,materials){cloud=new THREE.Mesh(geometry,new THREE.MeshPhongMaterial(materials,wireframe=true));cloud.scale.x=cloud.scale.y=cloud.scale.z=0.1;cloud.translation=THREE.GeometryUtils.center(geometry);scene.add(cloud);});}
var island=null;function initIsland(){var loader=new THREE.JSONLoader();loader.load('/dist/js/meshes/island.json',function(geometry,materials){island=new THREE.Mesh(geometry,new THREE.MeshLambertMaterial(materials,wireframe=true));island.scale.x=island.scale.y=island.scale.z=0.81;island.position.y=-4.76
island.translation=THREE.GeometryUtils.center(geometry);scene.add(island);})}
function getRandomInt(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min))+min;}
function calcZCoords(){if(!mountain){console.log('no mountain')
return;}
console.log(mountain.geometry.vertices.length)
for(var k=0;k<mountain.geometry.vertices.length;k++){console.log(mountain.geometry.vertices[k].y)
if(mountain.geometry.vertices[k].y>5){console.log(mountain.geometry.vertices[k].y)
zPoints.push(k)}}
console.log(zPoints)}
function animateMountainHeight(){if(!mountain){return;}
for(var j=0;j<zPoints.length;j++){mountain.geometry.vertices[zPoints[j]].y+=getRandomInt(-3,3)
mountain.geometry.vertices.verticesNeedUpdate=true;}}
function rotateMesh(){if(!mountain){return;}
mountain.rotation.y-=SPEED;cloud.rotation.y-=SPEED;}
function render(){requestAnimationFrame(render);rotateMesh();animateMountainHeight();renderer.render(scene,camera);}
init();render();